<?php

namespace HTL\ImmobilierBundle\Repository;

/**
 * BienRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BienRepository extends \Doctrine\ORM\EntityRepository
{
public function FindAllBienlocalitetype()
    {

             return $this->getEntityManager()
                ->createQuery(
                    'SELECT b.id,b.nombien,l.libellelocalite,b.prixlocation,b.description,t.libelletype,i.image FROM HTLImmobilierBundle:Bien b,HTLImmobilierBundle:Localite l,HTLImmobilierBundle:Typebien t,HTLImmobilierBundle:Image i WHERE b.libellelocalite=l.id AND b.typebien=t.id and b.id=i.bien'
                )
                 ->getResult();
              
        } 
    public function FindAllBienlocalitetypeid($id)
    {

             return $this->getEntityManager()
                ->createQuery(
                    'SELECT b.id,b.nombien,l.libellelocalite,b.prixlocation,b.description,t.libelletype,i.image FROM HTLImmobilierBundle:Bien b,HTLImmobilierBundle:Localite l,HTLImmobilierBundle:Typebien t,HTLImmobilierBundle:Image i WHERE b.libellelocalite=l.id AND b.typebien=t.id and b.id=i.bien and b.id=:id'
                )
                 ->setParameter('id',$id)->execute();
              
        } 
public function FindAllBienprix($prixlocation,$libellelocalite,$libelletype,$description)
    {
/*
             return $this->getEntityManager()
                ->createQueryBuilder()
                 ->SELECT('b','l','t','i')
                 ->FROM('HTLImmobilierBundle:Bien','b')
                 ->FROM('HTLImmobilierBundle:Image','i')
                 ->leftJoin('b.libellelocalite','l')
                 ->leftJoin('b.typebien','t')
                 ->leftJoin('i.bien','im')
                 ->where('l=:libellelocalite')
                 ->orwhere('t=:libelletype')
                 ->orwhere('b.prixlocation=:prixlocation')
                 ->orwhere('b.description LIKE :description')
 ->setParameters(array('prixlocation'=>$prixlocation,'libellelocalite'=>$libellelocalite,'libelletype'=>
                         $libelletype,'description'=>'%'.$description.'%'
                      ))                 
                 ->getQuery()->getResult();*/
              return $this->getEntityManager()->createQuery(    

                'SELECT b.id,b.nombien,l.libellelocalite,b.prixlocation,b.description,t.libelletype,i.image FROM HTLImmobilierBundle:Bien b,HTLImmobilierBundle:Localite l,HTLImmobilierBundle:Typebien t,HTLImmobilierBundle:Image i WHERE b.libellelocalite=l.id AND b.typebien=t.id and b.id=i.bien and b.prixlocation=:prixlocation AND t.libelletype=:libelletype AND b.description LIKE :description AND l.libellelocalite=:libellelocalite'
                )
                 ->setParameters(array('prixlocation'=>$prixlocation,'libellelocalite'=>$libellelocalite,'libelletype'=>
                                      $libelletype,'description'=>'%'.$description.'%'
                                      ))
                 ->execute();
        } 
public function InsertAllreservation($prenom,$nom,$numpiece,$email,$password,$vpassword)
    {

              return $this->getEntityManager()->createQuery(    

                'Insert into HTLImmobilierBundle:Reservation values(null,:prenom,:nom,numpiece)'
                )
                 ->setParameters(array('prixlocation'=>$prixlocation,'libellelocalite'=>$libellelocalite,'libelletype'=>
                                      $libelletype,'description'=>'%'.$description.'%'
                                      ))
                 ->execute();
        } 
    public function FindAllBiendescription($description)
    {

             return $this->getEntityManager()
                ->createQuery(
                    'SELECT b.id,b.nombien,l.libellelocalite,b.prixlocation,b.description,t.libelletype,i.image FROM HTLImmobilierBundle:Bien b,HTLImmobilierBundle:Localite l,HTLImmobilierBundle:Typebien t,HTLImmobilierBundle:Image i WHERE b.libellelocalite=l.id AND b.typebien=t.id and b.id=i.bien and b.description LIKE :description'
                )
                 ->setParameter('description','%'.$description.'%')->execute();
              
        } 
    public function FindAllBiensansdescription($prixlocation,$libellelocalite,$libelletype)
    {

             return $this->getEntityManager()
                ->createQuery(
                   
                'SELECT b.id,b.nombien,l.libellelocalite,b.prixlocation,b.description,t.libelletype,i.image FROM HTLImmobilierBundle:Bien b,HTLImmobilierBundle:Localite l,HTLImmobilierBundle:Typebien t,HTLImmobilierBundle:Image i WHERE b.libellelocalite=l.id AND b.typebien=t.id and b.id=i.bien and b.prixlocation=:prixlocation AND t.libelletype=:libelletype AND l.libellelocalite=:libellelocalite'
                )
                 ->setParameters(array('prixlocation'=>$prixlocation,'libellelocalite'=>$libellelocalite,'libelletype'=>
                                      $libelletype
                                      ))
                 ->execute();
        } 
     
    public function FindAllBienprixlocation($prixlocation)
    {

             return $this->getEntityManager()
                ->createQuery(
               
                'SELECT b.id,b.nombien,l.libellelocalite,b.prixlocation,b.description,t.libelletype,i.image FROM HTLImmobilierBundle:Bien b,HTLImmobilierBundle:Localite l,HTLImmobilierBundle:Typebien t,HTLImmobilierBundle:Image i WHERE b.libellelocalite=l.id AND b.typebien=t.id and b.id=i.bien and b.prixlocation BETWEEN (:prixlocation-30000) and (:prixlocation+30000)  '
                )
                 ->setParameter('prixlocation',$prixlocation)->execute();
              
        } 
   
}
